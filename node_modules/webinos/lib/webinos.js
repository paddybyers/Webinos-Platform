(function () {
	var path = require("path");

	var webinos = function (dirname, dependencies) {
		if (typeof dependencies === "undefined")
			dependencies = webinos.resolve(dirname, "dependencies.json");
		else
			dependencies = path.resolve(dirname, dependencies);

		this.local = webinos.environment(dependencies);

		if (typeof this.local.root !== "undefined")
			this.global = webinos.environment(path.join(this.local.dirname, this.local.root.location,
					"dependencies.json"));
	};

	webinos.resolve = function (dirname, basename) {
		dirname = path.resolve(dirname);

		while (!path.existsSync(path.join(dirname, basename))) {
			var parent = path.dirname(dirname);

			if (parent == dirname)
				throw "Cannot find '" + basename + "'";

			dirname = parent;
		}

		return path.join(dirname, basename);
	};

	webinos.environment = function (dependencies) {
		var object = require(dependencies);

		object.dirname = path.dirname(dependencies);
		object.require = function () {
			var argsArray = Array.prototype.slice.call(arguments);

			argsArray.unshift(this.dirname);

			return require(path.join.apply(null, argsArray));
		};

		return object;
	};

	module.exports = function (dirname, dependencies) {
		return new webinos(dirname, dependencies);
	};
})();